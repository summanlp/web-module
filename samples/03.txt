Java 8 Officially Released, Modularity Still a Concern. 
Open-source programming language gets a major update that will shape enterprise IT development for the next several years.
Oracle today officially released Java 8, ushering in a new era of development capabilities for the standard-bearer of enterprise IT software platforms. 
The path to Java 8 has been a long one for Oracle, dating back to at least 2010, when the Java Community Process (JCP) voted in favor of JSR-337, the specification for Java 8.
Java 8 had initially been scheduled to debut in the summer of 2012, but was delayed in an effort to allow more time for feature development. 
Java 8 is the first major update to Java since the Java 7 release in July 2011.
From a features perspective, Java 8 includes a number of capabilities that extend the programming model to the modern era of cloud deployments.
"The big thing in Java 8 is of course project Lambda, which enables developers to more effectively use concurrency and the callback style of programming popular in cloud development," Mike Piech, Red Hat's general manager of middleware, told Datamation.
James Donelan, vice president of engineering at MuleSoft, is also optimistic about the benefits of project Lambda within Java 8. 
Donelan told Datamation that Lambda expressions will bring a more functional approach to developing in Java.
"This is really significant, as functional programming has made a big comeback recently with more developers moving to JavaScript, Scala and Clojure due to their expressiveness and support for functional programming," Donelan said.
Red Hat is one of the leading vendors in the Java community from both an open-source perspective as well as commercial, with the JBoss application server platform portfolio. 
Piech noted that Red Hat's strong support of the OpenJDK community and leadership in Linux will also ensure broad reach for Java 8. 
OpenJDK is the open source implementation of the Java SE specification. 
OpenJDK 8 is now available in the current version of Fedora, which is version 20.
For MuleSoft, Java 8 could also represent a real benefit. 
MuleSoft is the leading vendor behind the open-source Mule Enterprise Service Bus (ESB) project, which is an integration platform technology. 
Donelan explained that the MuleSoft platform makes it really easy to build integrations and develop applications without writing any code. 
That said, Donelan still expects there to be a net benefit for MuleSoft users from Java 8.
"I think developers might find some of the new collections of APIs for bulk data operations, parallel sorting and functional approaches quite exciting for improved and faster data processing," Donelan said. 
"The changes to support really small VMs and improved memory management will make it easier to run lightweight applications and integrations, even on tiny devices".
While Java 8 is a major milestone for the Java community and was years in the making, it is still missing the key Project Jigsaw component that was originally part of the development plan.
"It's a pity that some of the features like Jigsaw were dropped, as modularity, runtime dependencies and interoperability are still a huge problem in Java," Donelan said. 
"In fact, this is the one area where I still think Java has a long way to go".